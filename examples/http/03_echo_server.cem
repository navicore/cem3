# Single-Connection Echo Server
# Demonstrates: TCP operations, real network I/O
# Limitation: Only handles one connection then exits

# Route HTTP request to response
: route ( String -- String )
  [ dup "GET / " string-starts-with ]
  [ drop "HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\n\r\nHello from cem3!" ]

  [ dup "GET /health" string-starts-with ]
  [ drop "HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\n\r\nOK" ]

  [ dup "GET /echo" string-starts-with ]
  [ drop "HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\n\r\nEcho!" ]

  [ drop 1 ]
  [ "HTTP/1.1 404 Not Found\r\nContent-Type: text/plain\r\n\r\n404 Not Found" ]

  4 cond
;

# Handle a single connection
: handle-connection ( Int -- )
  dup tcp-read
  route
  swap tcp-write
  tcp-close
;

# Main server
: main ( -- )
  "Starting single-connection echo server on port 8080..." write_line
  "Try: curl http://localhost:8080/" write_line
  "Try: curl http://localhost:8080/health" write_line
  "" write_line

  8080 tcp-listen
  "Waiting for connection..." write_line

  tcp-accept
  "Connection received! Handling..." write_line

  handle-connection

  "Connection closed. Server exiting." write_line
;
